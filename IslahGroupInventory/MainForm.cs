using DevExpress.XtraEditors;
using DevExpress.XtraGrid.Views.Grid;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace IslahGroupInventory
{
    public partial class MainForm : Form
    {
        InventoryDataClassesDataContext dbContext;
        public MainForm()
        {
            dbContext = new InventoryDataClassesDataContext();
            InitializeComponent();
        }

        private void MainForm_Load(object sender, EventArgs e)
        {
            LoadProductsTab();
        }
        private void tabControlMain_Selected(object sender, TabControlEventArgs e)
        {
            TabPage selectedPage = tabControlMain.SelectedTab;
            if (selectedPage == tabPageProducts)
            {
                LoadProductsTab();
            }
            else if (selectedPage == tabPageStocks)
            {
                LoadTotalProductLabel();
            }
            else if(selectedPage == tabPagePurchase)
            {

            }
            else if(selectedPage == tabPageSale)
            {

            }
            else if(selectedPage == tabPageVocher)
            {

            }
            else if (selectedPage == tabPageCustomer)
            {
                LoadCustomerDataGridView();
            }
            else if(selectedPage == tabPageSupplier)
            {

            }
            else if(selectedPage == tabPageUser)
            {

            }
        }

        // Products Tab Methods Start
        private void LoadProductsTab()
        {
            LoadProductsDataGridView();
            LoadProductCategory();
        }

        private void LoadProductCategory()
        {
            productCategoryBindingSource.DataSource = new InventoryDataClassesDataContext().SubCategories;
            comboBoxUPCategory.DataSource = productCategoryBindingSource;
        }

        private void LoadProductsDataGridView()
        {
            // This line of code is generated by Data Source Configuration Wizard
            productsBindingSource.DataSource = new InventoryDataClassesDataContext().Products;
            gridControlProducts.RefreshDataSource();
        }

        private void buttonAddProduct_Click(object sender, EventArgs e)
        {
            // TODO: Validation of the Add Product
            string prodCode = textBoxProdCode.Text;
            string prodName = textBoxName.Text;
            string desc = textBoxDescription.Text;
            string category = comboBoxCategory.Text;
            string sellPrice = textBoxSPrice.Text;
            string rp = textBoxRPoint.Text;
            string discount = textBoxDiscount.Text;
            string stock = textBoxStock.Text;

            dbContext.Products.InsertOnSubmit(new Product()
            {
                ProdCode = prodCode,
                ProdName = prodName,
                Description = desc,
                SubCategory_Name = category,
                SellingPrice = Convert.ToDecimal(sellPrice),
                ReOrderPoint = Convert.ToInt16(rp),
                Discount = Convert.ToDecimal(discount),
                Stock = Convert.ToInt32(stock),
                Branch_BranchId = 2
            });
            dbContext.SubmitChanges();

            LoadProductsDataGridView();

        }

        private void buttonUpdateProduct_Click(object sender, EventArgs e)
        {
            string productCode = textBoxUPCode.Text;
            var product = dbContext.Products.SingleOrDefault(p => p.ProdCode == productCode);
            product.ProdName = textBoxUPName.Text;
            product.Description = textBoxUPDescription.Text;
            product.SubCategory_Name = comboBoxUPCategory.Text;
            product.SellingPrice = Convert.ToDecimal(textBoxUPSPrice.Text);
            product.ReOrderPoint = Convert.ToInt16(textBoxUPRPoint.Text);
            product.Discount = Convert.ToDecimal(textBoxUPDiscount.Text);

            dbContext.SubmitChanges();
            LoadProductsDataGridView();

            XtraMessageBox.Show("Product Updated!!", "Information", MessageBoxButtons.OK, MessageBoxIcon.Information);
        }

        private void buttonUPLoad_Click(object sender, EventArgs e)
        {
            string productCode = textBoxUPCode.Text;
            var product = dbContext.Products.SingleOrDefault(p => p.ProdCode == productCode);
            if (product != null)
            {
                textBoxUPName.Text = product.ProdName;
                textBoxUPDescription.Text = product.Description;
                comboBoxUPCategory.Text = product.SubCategory_Name;
                textBoxUPSPrice.Text = product.SellingPrice.ToString();
                textBoxUPRPoint.Text = product.ReOrderPoint.ToString();
                textBoxUPDiscount.Text = product.Discount.ToString();
                textBoxUPStock.Text = product.Stock.ToString();
                buttonUpdateProduct.Enabled = true;
            }
            else
            {
                XtraMessageBox.Show("No product found!!", "Information", MessageBoxButtons.OK, MessageBoxIcon.Information);
            }
        }

        private void buttonProductDelete_Click(object sender, EventArgs e)
        {
            string productCode = textBoxDPCode.Text;
            var product = dbContext.Products.SingleOrDefault(p => p.ProdCode == productCode);

            if (product != null)
            {
                dbContext.Products.DeleteOnSubmit(product);
                dbContext.SubmitChanges();
                LoadProductsDataGridView();
                XtraMessageBox.Show("Product Removed!!", "Information", MessageBoxButtons.OK, MessageBoxIcon.Information);
            }
            else
            {
                XtraMessageBox.Show("No product found!!", "Information", MessageBoxButtons.OK, MessageBoxIcon.Information);
            }
        }

        // Products Tab Methods Finished

        // Stocks Tab Methods Start

        private void LoadTotalProductLabel()
        {
            var totalProduct = dbContext.Products.Count();
            labelTotalProduct.Text = totalProduct.ToString();
        }

        // Stocks Tab Methods Finished

        // Customers Tab Methods Start

        private void LoadCustomerDataGridView()
        {
            // This line of code is generated by Data Source Configuration Wizard
            customersBindingSource.DataSource = new IslahGroupInventory.InventoryDataClassesDataContext().Customers;
            gridControlCustomers.RefreshDataSource();
        }

        private void buttonAddCustomer_Click(object sender, EventArgs e)
        {
            // TODO: Customer add validation

            dbContext.Customers.InsertOnSubmit(new Customer()
            {
                CustCode = textBoxICCode.Text,
                CustName = textBoxICName.Text,
                Address = textBoxICAddress.Text,
                ContactNo = textBoxICContactNo.Text,
                Email = textBoxICEmail.Text,
                Remark = textBoxICRemarks.Text,
                Branch_BranchId = 2
            });

            dbContext.SubmitChanges();
            LoadCustomerDataGridView();
        }

        private void gridViewCustomer_ValidateRow(object sender, DevExpress.XtraGrid.Views.Base.ValidateRowEventArgs e)
        {
            GridView view = sender as GridView;
            var row = view.GetRow(e.RowHandle);
            string custCode = view.GetRowCellValue(e.RowHandle, "CustCode").ToString();

            var customer = dbContext.Customers.SingleOrDefault(c => c.CustCode == custCode);
            var rowCustomer = row as Customer;

            customer.CustName = rowCustomer.CustName;
            customer.Address = rowCustomer.Address;
            customer.ContactNo = rowCustomer.ContactNo;
            customer.Email = rowCustomer.Email;
            customer.Remark = rowCustomer.Remark;

            dbContext.SubmitChanges();
        }





        // Customers Tab Methods Finished

    }
}
